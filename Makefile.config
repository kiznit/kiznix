# Copyright (c) 2015, Thierry Tremblay
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# * Redistributions of source code must retain the above copyright notice, this
#   list of conditions and the following disclaimer.
#
# * Redistributions in binary form must reproduce the above copyright notice,
#   this list of conditions and the following disclaimer in the documentation
#   and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

SHELL=bash


###############################################################################
#
# Detect host OS
#
###############################################################################

ifndef HOST_OS
	ifeq ($(OS),Windows_NT)
		HOST_OS := Windows
	else
		# Linux, FreeBSD, Darwin, SunOS, ...
		HOST_OS := $(shell uname -s)
	endif
endif

ifndef HOST_OS
$(error HOST_OS not detected)
endif


###############################################################################
#
# Detect host architecture
#
###############################################################################

ifndef HOST_ARCH
	ifeq ($(HOST_OS),Windows)
		ifeq ($(PROCESSOR_ARCHITEW6432),AMD64)
			HOST_ARCH := x86_64
		else ifeq ($(PROCESSOR_ARCHITECTURE),AMD64)
			HOST_ARCH := x86_64
		else
			HOST_ARCH := ia32
		endif
	else
		# -m is the only option supported everywhere, see https://en.wikipedia.org/wiki/Uname
		MACHINE := $(shell uname -m)

		ifneq ($(filter $(MACHINE),x86_64 amd64 i686-64),)
			HOST_ARCH := x86_64
		else ifneq ($(filter $(MACHINE),i386 i686 i86pc x86pc i686-AT386),)
			HOST_ARCH := ia32
		endif
	endif
endif


ifndef HOST_ARCH
$(error HOST_ARCH not detected)
endif


###############################################################################
#
# Target architecture
#
###############################################################################

ifndef TARGET_ARCH
	TARGET_ARCH := $(HOST_ARCH)
endif



###############################################################################
#
# Toolchain
#
###############################################################################

ifndef TOOLPREFIX
	ifeq ($(TARGET_ARCH),ia32)
		TOOLPREFIX := i686-elf-
	else ifeq ($(TARGET_ARCH),x86_64)
		TOOLPREFIX := x86_64-elf-
	endif
endif


CC	:= $(TOOLPREFIX)gcc
CXX	:= $(TOOLPREFIX)g++
LD	:= $(TOOLPREFIX)ld
AS	:= nasm

# These are for kernel space and should be different for user space
CFLAGS		:= -O2 -ffreestanding -fbuiltin -Wall -Wextra -Werror -std=gnu99
CXXFLAGS	:= -O2 -ffreestanding -fbuiltin -Wall -Wextra -Werror -std=gnu++11 -fno-exceptions -fno-rtti
CPPFLAGS	:=
LDFLAGS		:= -nostdlib --warn-common --no-undefined --fatal-warnings
ASFLAGS		:= -f elf

ifeq ($(TARGET_ARCH),x86_64)
	ifneq (mingw, $(findstring mingw, $(TOOLPREFIX)))
		LDFLAGS := $(LDFLAGS) -z max-page-size=0x1000
	endif
endif
