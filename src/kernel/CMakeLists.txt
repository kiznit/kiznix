# Copyright (c) 2015, Thierry Tremblay
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# * Redistributions of source code must retain the above copyright notice, this
#   list of conditions and the following disclaimer.
#
# * Redistributions in binary form must reproduce the above copyright notice,
#   this list of conditions and the following disclaimer in the documentation
#   and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

CMAKE_MINIMUM_REQUIRED(VERSION 2.8.12)
PROJECT(KIZNIX_KERNEL)

ADD_SUBDIRECTORY(${CMAKE_SOURCE_DIR}/../libc "${CMAKE_CURRENT_BINARY_DIR}/libc")


if (CMAKE_SYSTEM_PROCESSOR STREQUAL "x86")
    SET(KERNEL_VIRTUAL_BASE 0xC0000000)
elseif (CMAKE_SYSTEM_PROCESSOR STREQUAL "x86_64")
    SET(KERNEL_VIRTUAL_BASE 0xFFFFFFFFC0000000)
endif()



SET(KERNEL_SRCS
    kernel.cpp
)

SET(KERNEL_LIBS
    libc
)


INCLUDE_DIRECTORIES(
    SYSTEM ../include
    SYSTEM ${CMAKE_SOURCE_DIR}/../libc/include
)


SET(CMAKE_EXE_LINKER_FLAGS "-nostdlib -e kernel_main -Wl,-Ttext=${KERNEL_VIRTUAL_BASE}")

if (CMAKE_SYSTEM_PROCESSOR STREQUAL "x86_64")
    SET(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} -z max-page-size=0x1000")
endif()


ADD_EXECUTABLE(kernel ${KERNEL_SRCS})

TARGET_LINK_LIBRARIES(kernel ${KERNEL_LIBS})
